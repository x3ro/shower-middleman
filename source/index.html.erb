<!DOCTYPE HTML>
<html lang="en">
<head>
	<title>Shower Presentation Engine</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=792, user-scalable=no">
	<meta http-equiv="x-ua-compatible" content="ie=edge">
	<link rel="stylesheet" href="stylesheets/screen.css">
</head>
<body class="list">
	<header class="caption">
		<h1>Shower Presentation Engine</h1>
		<p>Yours Truly, Famous Inc.</p>
	</header>

	<section class="slide cover" id="Cover"><div>
		<h2>Joining the</h2>

		<img src="images/riot-logo.png" alt="">
	</div></section>

	<section class="slide"><div>
		<h2>Who we are</h2>
		<img class="fit" src="images/whoweare.png">
	</div></section>

	<section class="slide"><div>
		<h2>What we're here for</h2>
		<ol>
			<li>Introducing the <span class="riot"><img src="images/riot-logo.png"></span></li>
			<li>Built on <span class="riot"><img src="images/riot-logo.png"></span>– Watr.li</li>
			<li>WIP name: Getting your hands dirty!</li>
		</ol>
	</div></section>

	<section class="slide heading">
		<div>
			<h2>Introducing the <%= riot %></h2>
		</div>
	</section>

	<section class="slide"><div>
		<h2>Architecture</h2>
		<img class="fit" style="height: 126%" src="images/architecture.svg">
	</div></section>

	<section class="slide"><div>
		<img class="fit" style="height: 126%; margin-top: -240px" src="images/architecture.svg">
	</div></section>

	<section class="slide"><div>
		<div style="height: 440px; overflow: hidden;">
			<table >
				<tr>
					<td style="vertical-align: top; font-size: 0.74em; line-height: 1">
						<%= code_listing_plain("dirtree.txt") %>
					</td>
					<td style="vertical-align: top;">
						<img style="width: 310px" src="images/architecture.svg">
					</td>
				</tr>
			</table>
		</div>

	</div></section>

	<section class="slide">
		<div>
			<h2><%= riot %> best practices</h2>
			<ul>
				<li>Consult the Wiki: <a href="http://wiki.riot-os.org">http://wiki.riot-os.org</a></li>
				<li>... and the API documentation: <a href="http://doc.riot-os.org">http://doc.riot-os.org</a></li>
			</ul>

		</div>
	</section>

	<section class="slide positive">
		<div>
			<h2>Do's</h2>
			<ul>
				<li>Use static memory</li>
				<li>Select the priorities carefully</li>
				<li>Minimize stack usage</li>
				<ul>
					<li><code>DEVELHELP / CREATE_STACKTEST</code></li>
				</ul>
				<li>Use threads</li>
			</ul>
		</div>
	</section>

	<section class="slide negative">
		<div>
			<h2>Don'ts</h2>
			<ul>
				<li>Not using threads</li>
				<li>Using the POSIX wrapper</li>
				<ul>
					<li>It's intended for initial ports to RIOT, not for new <br>
					code or implementations targeting maximum efficiency</li>
				</ul>
			</ul>
		</div>
	</section>

	<section class="slide heading">
		<div>
			<h2>Built on <%= riot %> – Watr.li</h2>
		</div>
	</section>

	<section class="slide">
		<div>
			<h2>WIP</h2>
		</div>
	</section>




	<section class="slide heading">
		<div>
			<h2>Getting your hands dirty!</h2>
		</div>
	</section>

	<section class="slide">
		<div>
			<h2>Toolchain setup WIP</h2>
			<ul>
				<li>Either</li>
				<ul>
					<li>Use our VM</li>
					<li>Setup the toolchain according to bit.ly/1Bv7Z8m</li>
				</ul>
				<li>Board information:https://github.com/RIOT-OS/RIOT/wiki/Board%3A-Samr21-xpro </li>
			</ul>
		</div>
	</section>



	<section class="slide">
		<div>
			<h2>Getting the code! WIP</h2>
			<ul>
				<li>link to the riot repository</li>
				<li>git clone https://github.com/RIOT-OS/applications</li>
			</ul>
		</div>
	</section>





	<section class="slide">
		<div>
			<h2>Slide-term v0.1 alpha</h2>
			<pre class="terminal"><%= terminal("working dir", "some-shell-command -x") do
<<-eof
output of the command
eof
			end %></pre><br>

			<pre class="terminal second"><%= terminal("working dir", "some-shell-command -x") do
<<-eof
output of the command
eof
			end %></pre>
		</div>
	</section>

	<section class="slide heading">
		<div>
			<h2>Native mode</h2>
		</div>
	</section>

	<section class="slide">
		<div>
			<h2>Preparing the virtual network</h2>
			TODO vllt illustration, mention switch to RIOT dir
			<pre class="terminal"><%= terminal("RIOT", "cpu/native/tapsetup.sh create 2") do
<<-eof
creating tapbr0 ...
creating tap0 ...
creating tap1 ...
eof
			end %></pre>

		</div>
	</section>


	<section class="slide">
		<div>
			<h2>Building native-mode application</h2>
			<pre class="terminal small"><%= terminal("RIOT", "cd examples/default/") %>
<%= terminal("default", "make all term") do
<<-eof
Building application default for native w/ MCU native.
"make" -C /home/oleg/git/RIOT/cpu/native
...
RIOT native board initialized.
RIOT native hardware initialization complete.
kernel_init(): This is RIOT!
kernel_init(): jumping into first task...
...
Welcome to RIOT!
eof
			end %></pre>
		</div>
	</section>

	<section class="slide">
		<div>
			<h2>Configuring the node</h2>
			<ul>
				<li>The "default" example comes with a "shell"</li>
				<li>Lets us set the radio TODO address, send messages, ...</li>
			</ul>
			<pre class="terminal small"><%= terminal("default", "make all term") do
<<-eof
[...]
Welcome to RIOT!
eof
			end %><%= terminal("", "addr 23", :prompt => '>') do
<<-eof
[transceiver] trying to set address 23
[transceiver] got address: 23
eof
			end %></pre>
	</div></section>

	<section class="slide">
		<div>
			<h2>How about a second node?</h2>
			<p>Let's switch to a new terminal tab/window!</p>
	</div></section>



	<section class="slide">
		<div>
			<h2>How about a second node?</h2>
			<ul>
				<li>Specify the tap interface to use (default is tap0)</li>
				<li>Configure the radio address of the second node</li>
			</ul>
			<pre class="terminal small second"><%= terminal("default", "PORT=tap1 make term") do
<<-eof
[...]
Welcome to RIOT!
eof
			end %><%= terminal("", "addr 42", :prompt => ">") do
<<-eof
[transceiver] trying to set address 42
[transceiver] got address: 42
eof
			end %></pre>
		</div>
	</section>


		<section class="slide">
		<div>
			<h2>Connecting the two nodes</h2>
			<ul>
				<li>Time to send our first packet!</li>
			</ul>
			<pre class="terminal small"><%= terminal("", "") do
<<-eof
[...]
[transceiver] trying to set address 42
[transceiver] got address: 42
eof
			end %><%= terminal("", "txtsnd 23 riottest", :prompt => ">") do
<<-eof
[transceiver] Sending packet of length 9 to 23: riottest
[transceiver] Packet sent: 60
eof
			end %></pre>
		</div>
	</section>

	<section class="slide">
		<div>
			<h2>Result on the receiving node</h2>
			<ul>
			</ul>
			<pre class="terminal small"><%= terminal("", "") do
<<-eof
> Got radio packet:
        Length: 9
        Src:    42
        Dst:    23
        LQI:    0
        RSSI:   0

72 69 6F 74 74 65 73 74 00
eof
			end %></pre>
		</div>
	</section>

	<section class="slide heading">
		<div>
			<h2>Flashing to hardware</h2>
		</div>
	</section>

		<section class="slide">
		<div>
			<h2>Flashing to hardware</h2>
			<pre class="terminal small"><%= terminal("default", "BOARD=samr21-xpro make all flash term") do
<<-eof
Building application "default" for "samr21-xpro" ...
[...]
wrote 55296 bytes from file [...]/samr21-xpro/default
.hex in 2.454112s (22.004 KiB/s)
[...]
shutdown command invoked
RIOT/dist/tools/pyterm/pyterm -p /dev/ttyUSB2 -b 500000
INFO # Connect to serial port /dev/ttyUSB2
Welcome to pyterm!
Type ’/exit’ to exit.
eof
				end %></pre>
		</div>
	</section>


	<section class="slide heading">
		<div>
			<h2>And now for some real networking!</h2>
		</div>
	</section>

	<section class="slide">
		<div>
			<h2>The <%= riot %> shell</h2>
			<ul>
				<li>Interactive shell with some pre-defined commands</li>
				<li>Can be used in any application</li>
				<li>Easily extensible with custom functionality</li>
			</ul>
	</div></section>


	<section class="slide">
		<div>
			<h2>The <%= riot %> shell</h2>
			<pre class="terminal small"><%= terminal("", "help", :prompt => '>') do
<<-eof
Command Description
---------------------------------------
nc       RIOT netcat - arbitrary UDP
ping     Send an ICMPv6 echo request
reboot   Reboot the node
id       Gets or sets the node ’s id.
[...]
eof
				end %></pre>
	</div></section>


	<section class="slide">
		<div>
			<h2>Sixlowapp</h2>
			<ul>
				<li>Example application for UDP over 6LoWPAN</li>
				<li>It comes with two extra commands:</li>
				<ul>
					<li><code>ping:</code> The famous ICMP diagnostic tool</li>
					<li><code>nc:</code> Very basic variation of netcat for UDP connections</li>
				</ul>
			</ul>
	</div></section>



	<section class="slide">
		<div>
			<h2>Sixlowapp</h2>
			<pre class="terminal"><%= terminal("sixlowapp", "BOARD=samr21-xpro make flash") %>
<%= terminal("", "ping fe80::ff:fe00:f01e", :prompt => ">") do
<<-eof
INFO # ping fe80::ff:fe00:f01e
INFO # Echo reply from fe80::ff:fe00:f01e
       received, rtt: 0.0340s
eof
			end %></pre>
	</div></section>


	<section class="slide">
		<div>
			<h2>Sixlowapp</h2>
			<pre class="terminal small"><%= terminal("sixlowapp", "BOARD=samr21-xpro make flash") %>
<%= terminal("", "ifconfig", :prompt => ">") do
<<-eof
[...]
INFO # inet6 addr: fe80::ff:fe00:2369/128  scope: local
[...]
eof
			end %><%= terminal("", "nc -l 12345", :prompt => ">") do
<<-eof
INFO # > Listening for incoming UDP connection
         at port 12345
eof
			end %></pre>
	</div></section>


	<section class="slide">
		<div>
			<h2>Sixlowapp</h2>
			<pre class="terminal small second"><%= terminal("sixlowapp", "BOARD=samr21-xpro make flash") %>
<%= terminal("", "nc fe80::ff:fe00:2369 12345 test", :prompt => ">") do
<<-eof
INFO # Trying to send 5 bytes to
       fe80::ff:fe00:2369:12345
INFO # Successful deliverd 53 bytes over UDP
       to fe80::ff:fe00:2369 to 6LoWPAN
eof
			end %></pre>
	</div></section>


	<section class="slide">
		<div>
			<h2>Sixlowapp</h2>
			<pre class="terminal small"><%= terminal("sixlowapp", "BOARD=samr21-xpro make flash") %>
<%= terminal("", "nc -l 12345", :prompt => ">") do
<<-eof
INFO # > Listening for incoming UDP connection
         at port 12345
INFO # > UDP packet received, payload: test
eof
			end %></pre>
	</div></section>


	<section class="slide">
		<div>
			<h2>Virtualize your network</h2>
	</div></section>




	<section class="slide shout"><div>
		<h2>Thank you!<br>Any questions?</h2>
	</div></section>

	<!--
	<section class="slide small-font"><div>
		<h2>Plain Text on Your Slides</h2>
		<p>Lorem ipsum dolor sit amet, consectetur <a href="#4">adipisicing</a> elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, <em>quis nostrud</em> exercitation ullamco laboris <strong>nisi ut aliquip</strong> ex ea commodo consequat. Duis aute irure <i>dolor</i> in reprehenderit in voluptate velit esse cillum <b>dolore</b> eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in <code>&lt;culpa&gt;</code> qui officia deserunt mollit anim id est laborum.</p>
	</div></section>
	<section class="slide"><div>
		<h2>All Kind of Lists</h2>
		<ol>
			<li>Simple lists are marked with bullets</li>
			<li>Ordered lists begin with a number</li>
			<li>You can even nest lists one inside another
				<ul>
					<li>Or mix their types</li>
					<li>But do not go too far</li>
					<li>Otherwise audience will be bored</li>
				</ul>
			</li>
			<li>Look, seven rows exactly!</li>
		</ol>
	</div></section>
	<section class="slide"><div>
		<h2>Serious Citations</h2>
		<figure>
			<blockquote>
				<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia.</p>
			</blockquote>
			<figcaption>Marcus Tullius Cicero</figcaption>
		</figure>
	</div></section>

	<section class="slide"><div>
		<h2>Code Samples</h2>
		<%= code_listing("test.c", "c") %>
	</div></section>

	<section class="slide"><div>
		<h2>Even Tables</h2>
		<table>
		<tr>
			<th scope="col">Locavore</th>
			<th>Umami</th>
			<th>Helvetica</th>
			<th>Vegan</th>
		</tr>
		<tr>
			<th scope="row">Fingerstache</th>
			<td>Kale</td>
			<td>Chips</td>
			<td>Keytar</td>
		</tr>
		<tr>
			<th scope="row">Sriracha</th>
			<td>Gluten-free</td>
			<td>Ennui</td>
			<td>Keffiyeh</td>
		</tr>
		<tr>
			<th scope="row">Thundercats</th>
			<td>Jean</td>
			<td>Shorts</td>
			<td>Biodiesel</td>
		</tr>
		<tr>
			<th scope="row">Terry</th>
			<td>Richardson</td>
			<td>Swag</td>
			<td>Blog</td>
		</tr>
		</table>
		<p>It’s good to have information organized.</p>
	</div></section>
	<section class="slide cover" id="Picture"><div>
		<h2>Pictures</h2>
		<img src="pictures/picture.jpg" alt="">
		<style>
			#Picture h2 {
				color:#FFF;
				}
		</style>
	</div></section>
	<section class="slide shout"><div>
		<h2>You can even shout this way</h2>
	</div></section>
	<section class="slide"><div>
		<h2>Inner Navigation</h2>
		<ol>
			<li>Lets you reveal list items one by one</li>
			<li class="next">To keep some key points</li>
			<li class="next">In secret from audience</li>
			<li class="next">But it will work only once</li>
			<li class="next">Nobody wants to see the same joke twice</li>
		</ol>
	</div></section>
	<section class="slide shout" id="SeeMore"><div>
		<h2><img src="pictures/logo.svg" alt=""> <a href="https://github.com/shower/shower">See more on GitHub</a></h2>
		<style>
			#Picture h2 {
				color:#FFF;
				}
			#SeeMore h2 {
				font-size:100px
				}
			#SeeMore img {
				width:0.72em;
				height:0.72em;
				}
		</style>
	</div></section>
	<p class="badge"><a href="https://github.com/shower/shower">Fork me on Github</a></p>
	-->


	<!--
		To hide progress bar from entire presentation
		just remove “progress” element.
		-->
	<div class="progress"><div></div></div>
	<script src="javascripts/all.js"></script>
	<!-- Copyright © 2014 Yours Truly, Famous Inc. -->
	<!-- Photos by John Carey, fiftyfootshadows.net -->
</body>
</html>
